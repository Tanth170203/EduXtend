@page
@using BusinessObject.DTOs.Evidence
@model WebFE.Pages.Student.MyEvidences.IndexModel
@{
    ViewData["Title"] = "My Evidences";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<section class="container my-5">
    <!-- Header -->
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3">
        <div>
            <h1 class="fw-bold mb-1">My Evidences</h1>
            <p class="text-muted mb-0">Manage and track your activity evidences</p>
        </div>
        <a class="btn btn-primary rounded-pill" href="/Student/MyEvidences/Submit">
            <i class="bi bi-plus-circle"></i> Submit new evidence
        </a>
    </div>

    <!-- Alerts -->
    @if (!string.IsNullOrEmpty(Model.SuccessMessage))
    {
        <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
            <i class="bi bi-check-circle me-2"></i>
            <strong>Success!</strong> @Model.SuccessMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show shadow-sm" role="alert">
            <i class="bi bi-exclamation-circle me-2"></i>
            <strong>Error!</strong> @Model.ErrorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Quick Stats (based on ALL evidences, not filtered) -->
    <div class="row g-3 mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-2 fw-medium">Total evidences</p>
                            <h2 class="mb-0 fw-bold">@Model.Evidences.Count</h2>
                        </div>
                        <div class="rounded-3 p-3" style="background-color:#e3f2fd;">
                            <i class="bi bi-file-text" style="font-size:1.5rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-2 fw-medium">Pending</p>
                            <h2 class="mb-0 fw-bold">
                                @Model.Evidences.Count(e => e.Status == "Pending")
                            </h2>
                        </div>
                        <div class="rounded-3 p-3" style="background-color:#fff3e0;">
                            <i class="bi bi-hourglass-split" style="font-size:1.5rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-2 fw-medium">Approved</p>
                            <h2 class="mb-0 fw-bold">
                                @Model.Evidences.Count(e => e.Status == "Approved")
                            </h2>
                        </div>
                        <div class="rounded-3 p-3" style="background-color:#e8f5e9;">
                            <i class="bi bi-check-circle" style="font-size:1.5rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-md-6">
            <div class="card border-0 shadow-sm h-100">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-start">
                        <div>
                            <p class="text-muted mb-2 fw-medium">Total points</p>
                            <h2 class="mb-0 fw-bold">
                                +@Model.Evidences.Where(e => e.Status == "Approved").Sum(e => e.Points)
                            </h2>
                        </div>
                        <div class="rounded-3 p-3" style="background-color:#f3e5f5;">
                            <i class="bi bi-star-fill" style="font-size:1.5rem;"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters (auto-submit with debounce) -->
    <form method="get" id="filterForm" class="card shadow-sm border-0 mb-4 p-4">
        <div class="row g-3">
            <div class="col-md-5">
                <input type="text" name="searchTerm" value="@Model.SearchTerm"
                       class="form-control filter-input-text" placeholder="Search by title, description, criterion...">
            </div>
            <div class="col-md-2">
                <select name="status" class="form-select filter-select">
                    <option value="">All statuses</option>
                    <option value="Pending" selected="@(Model.Status == "Pending")">Pending</option>
                    <option value="Approved" selected="@(Model.Status == "Approved")">Approved</option>
                    <option value="Rejected" selected="@(Model.Status == "Rejected")">Rejected</option>
                </select>
            </div>
            <div class="col-md-3">
                <input type="text" name="criterion" value="@Model.Criterion"
                       class="form-control filter-input-text" placeholder="Filter by criterion">
            </div>
            <div class="col-md-2">
                <select name="sort" class="form-select filter-select">
                    <option value="">Newest</option>
                    <option value="date_desc" selected="@(Model.Sort == "date_desc")">Newest</option>
                    <option value="date_asc" selected="@(Model.Sort == "date_asc")">Oldest</option>
                    <option value="point_desc" selected="@(Model.Sort == "point_desc")">Points high → low</option>
                    <option value="point_asc" selected="@(Model.Sort == "point_asc")">Points low → high</option>
                </select>
            </div>
        </div>
        <div class="d-flex gap-2 mt-3 align-items-center">
            <small class="text-muted">
                <i class="bi bi-info-circle"></i> Filters apply automatically as you type
            </small>
            @if (!string.IsNullOrEmpty(Model.SearchTerm) ||
                        !string.IsNullOrEmpty(Model.Status) ||
                        !string.IsNullOrEmpty(Model.Criterion) ||
                        !string.IsNullOrEmpty(Model.Sort))
            {
                <a href="/Student/MyEvidences" class="btn btn-outline-secondary btn-sm ms-auto">
                    <i class="bi bi-x-circle"></i> Clear filters
                </a>
            }
        </div>
    </form>

    <!-- Summary (filtered results) -->
    <div class="mb-3">
        <h5 class="text-muted">
            <i class="bi bi-collection"></i>
            @if (Model.FilteredEvidences.Count != Model.Evidences.Count)
            {
                <span>Found <strong>@Model.FilteredEvidences.Count</strong> / @Model.Evidences.Count evidences</span>
            }
            else
            {
                <span>Total <strong>@Model.Evidences.Count</strong> evidences</span>
            }
        </h5>
    </div>

    <!-- Table (same style as Clubs) -->
    <div class="card shadow-sm border-0">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-striped align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th class="px-4" style="width:40%;">Title & description</th>
                            <th>Criterion</th>
                            <th>Status</th>
                            <th class="text-center">Points</th>
                            <th>Submitted</th>
                            <th class="text-end" style="width:190px;">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (!Model.FilteredEvidences.Any())
                        {
                            <tr>
                                <td colspan="6" class="text-center text-muted py-5">
                                    <i class="bi bi-inbox" style="font-size:3rem;"></i>
                                    @if (!Model.Evidences.Any())
                                    {
                                        <div class="mt-3">No evidences yet</div>
                                        <div class="small">Click "Submit new evidence" to get started</div>
                                    }
                                    else
                                    {
                                        <div class="mt-3">No matching evidences found</div>
                                        <div class="small">Try changing filters or <a href="/Student/MyEvidences">clear filters</a></div>
                                    }
                                </td>
                            </tr>
                        }
                        else
                        {
                            @foreach (var evidence in Model.FilteredEvidences)
                            {
                                var statusBadge = evidence.Status switch
                                {
                                    "Approved" => "bg-success",
                                    "Pending" => "bg-warning text-dark",
                                    "Rejected" => "bg-danger",
                                    _ => "bg-secondary"
                                };
                                <tr>
                                    <td class="px-4">
                                        <div class="fw-semibold mb-1">@evidence.Title</div>
                                        @if (!string.IsNullOrEmpty(evidence.Description))
                                        {
                                            <div class="text-muted small text-truncate-2">
                                                @(evidence.Description.Length > 120 ? evidence.Description.Substring(0, 120) + "..." : evidence.Description)
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <span class="badge bg-light text-dark">
                                            <i class="bi bi-list-check me-1"></i>@evidence.CriterionTitle
                                        </span>
                                    </td>
                                    <td>
                                        <span class="badge @statusBadge">
                                            @if (evidence.Status == "Approved")
                                            {
                                                <i class="bi bi-check-circle me-1"></i>
                                            }
                                            else if (evidence.Status == "Pending")
                                            {
                                                <i class="bi bi-hourglass-split me-1"></i>
                                            }
                                            else
                                            {
                                                <i class="bi bi-x-circle me-1"></i>
                                            }
                                        @(
                                                                            evidence.Status == "Approved" ? "Approved" :
                                                                            evidence.Status == "Pending" ? "Pending" : "Rejected"
                                                                            )
                                    </span>
                                </td>
                                <td class="text-center">
                                @if (evidence.Status == "Approved")
                                        {
                                            <span class="fw-semibold text-success">+@evidence.Points</span>
                                        }
                                        else
                                        {
                                            <span class="text-muted">-</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="small">@evidence.SubmittedAt.ToString("dd/MM/yyyy")</div>
                                        <div class="text-muted small">@evidence.SubmittedAt.ToString("HH:mm")</div>
                                    </td>
                                    <td class="text-end">
                                        <div class="d-inline-flex gap-2">
                                            @if (!string.IsNullOrEmpty(evidence.FilePath))
                                            {
                                                <a class="btn btn-sm btn-outline-info rounded-pill"
                                                   href="@evidence.FilePath"
                                                   target="_blank"
                                                   title="View evidence">
                                                    <i class="bi bi-eye"></i> View
                                                </a>
                                            }
                                            @if (evidence.Status == "Pending")
                                            {
                                                <form method="post" asp-page-handler="Delete" class="d-inline">
                                                    <input type="hidden" name="id" value="@evidence.Id" />
                                                    <button type="submit"
                                                            class="btn btn-sm btn-outline-danger rounded-pill"
                                                            onclick="return confirm('Are you sure you want to delete this evidence?')"
                                                            title="Delete">
                                                        <i class="bi bi-trash3"></i> Delete
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</section>

<style>
    .text-truncate-2 {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // ✅ Auto-filter functionality
            const filterForm = document.getElementById('filterForm');
            const textInputs = document.querySelectorAll('.filter-input-text');
            const selectInputs = document.querySelectorAll('.filter-select');

            let debounceTimer;

            // Debounce function for text inputs (300ms delay)
            function debounceSubmit() {
                clearTimeout(debounceTimer);
                debounceTimer = setTimeout(() => {
                    filterForm.submit();
                }, 300);
            }

            // Auto-submit on text input (with debounce)
            textInputs.forEach(input => {
                input.addEventListener('input', debounceSubmit);
            });

            // Auto-submit on select change (instant, no debounce)
            selectInputs.forEach(select => {
                select.addEventListener('change', () => {
                    filterForm.submit();
                });
            });

            // Tooltips if needed
            document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach(el => new bootstrap.Tooltip(el));
        });
    </script>
}
