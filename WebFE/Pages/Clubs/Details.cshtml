@page "{id:int}"
@model WebFE.Pages.Clubs.DetailsModel
@{
    var c = Model.Club!;
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = c.Name;
}

<div class="club-detail container my-5">
    <div class="position-relative mb-4">
        <img src="@(c.BannerUrl ?? "/img/club-banner.png")"
             class="img-fluid rounded shadow-sm w-100"
             style="height:260px; object-fit:cover;">
        <div class="position-absolute bottom-0 start-0 p-4 text-white"
             style="background:linear-gradient(to top,rgba(0,0,0,0.6),transparent)">
            <h1 class="fw-bold">@c.Name</h1>
            <p class="text-light mb-1">@c.Description</p>
        </div>
    </div>

    <!-- Recruitment Status & Apply Button -->
    <div id="applicationStatusContainer">
        @if (Model.IsMember)
        {
            <!-- User is already a member -->
            <div class="alert alert-info d-flex justify-content-between align-items-center mb-4">
                <div>
                    <i data-lucide="check-circle" style="width: 20px; height: 20px; margin-right: 8px;"></i>
                    <strong>You are a member of this club!</strong>
                </div>
                <a asp-page="/Clubs/MemberDashboard" asp-route-id="@c.Id" class="btn btn-primary">
                    <i data-lucide="layout-dashboard" style="width: 16px; height: 16px;"></i>
                    Member Dashboard
                </a>
            </div>
        }
        else if (Model.MyJoinRequest != null)
        {
            <!-- User has an existing join request -->
            @if (Model.MyJoinRequest.Status == "Pending")
            {
                <div class="alert alert-warning d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <i data-lucide="clock" style="width: 20px; height: 20px;"></i>
                        <strong>Application Pending</strong>
                        <span class="ms-2">Your application is being reviewed by club managers.</span>
                    </div>
                    <a asp-page="/Clubs/Apply" asp-route-clubId="@c.Id" class="btn btn-outline-warning">
                        <i data-lucide="file-text" style="width: 16px; height: 16px;"></i>
                        View Application
                    </a>
                </div>
            }
            else if (Model.MyJoinRequest.Status == "Approved")
            {
                <div class="alert alert-success d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <i data-lucide="check-circle" style="width: 20px; height: 20px;"></i>
                        <strong>You are a member!</strong>
                        <span class="ms-2">Your application has been approved. Welcome to the club!</span>
                    </div>
                    <a asp-page="/Clubs/Apply" asp-route-clubId="@c.Id" class="btn btn-outline-success">
                        <i data-lucide="file-text" style="width: 16px; height: 16px;"></i>
                        View Application
                    </a>
                </div>
            }
            else if (Model.MyJoinRequest.Status == "Rejected")
            {
                <div class="alert alert-danger d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <i data-lucide="x-circle" style="width: 20px; height: 20px;"></i>
                        <strong>Application Rejected</strong>
                        <span class="ms-2">Unfortunately, your application was not approved.</span>
                    </div>
                    <a asp-page="/Clubs/Apply" asp-route-clubId="@c.Id" class="btn btn-outline-danger">
                        <i data-lucide="file-text" style="width: 16px; height: 16px;"></i>
                        View Details
                    </a>
                </div>
            }
        }
        else if (c.IsRecruitmentOpen)
        {
            <!-- No existing request and recruitment is open -->
            <div class="alert alert-success d-flex justify-content-between align-items-center mb-4">
                <div>
                    <i data-lucide="user-plus" style="width: 20px; height: 20px;"></i>
                    <strong>Recruitment is OPEN!</strong>
                    <span class="ms-2">We're looking for passionate members to join our club.</span>
                </div>
                <a asp-page="/Clubs/Apply" asp-route-clubId="@c.Id" class="btn btn-success">
                    <i data-lucide="send" style="width: 16px; height: 16px;"></i>
                    Apply Now
                </a>
            </div>
        }
        else
        {
            <!-- Recruitment is closed -->
            <div class="alert alert-secondary d-flex align-items-center mb-4">
                <i data-lucide="door-closed" style="width: 20px; height: 20px; margin-right: 8px;"></i>
                <span>Recruitment is currently closed. Check back later for opportunities to join!</span>
            </div>
        }
    </div>

    <!-- Club Stats -->
    <div class="row text-center mb-5">
        <div class="col-md-3 col-6">
            <h4 class="fw-bold text-primary">@c.MemberCount</h4>
            <p class="text-muted small mb-0"><i class="bi bi-people"></i> Members</p>
        </div>
        <div class="col-md-3 col-6">
            <h4 class="fw-bold text-success">@c.ActivityCount</h4>
            <p class="text-muted small mb-0"><i class="bi bi-calendar-event"></i> Activities</p>
        </div>
        <div class="col-md-3 col-6">
            <h4 class="fw-bold text-info">@c.DepartmentCount</h4>
            <p class="text-muted small mb-0"><i class="bi bi-diagram-3"></i> Departments</p>
        </div>
        <div class="col-md-3 col-6">
            <h4 class="fw-bold text-warning">@c.AwardCount</h4>
            <p class="text-muted small mb-0"><i class="bi bi-trophy"></i> Awards</p>
        </div>
    </div>

    <!-- Club Awards -->
    @if (Model.Awards.Any())
    {
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="fw-bold mb-0">
                        <i data-lucide="trophy" style="width: 20px; height: 20px;"></i> Club Awards
                    </h5>
                    <span class="badge bg-warning text-dark">@Model.Awards.Count award@(Model.Awards.Count > 1 ? "s" : "")</span>
                </div>
                <div class="row g-3">
                    @foreach (var award in Model.Awards.Take(6))
                    {
                        <div class="col-md-6">
                            <div class="d-flex align-items-start gap-3 p-3 bg-light rounded">
                                <div class="flex-shrink-0">
                                    <div class="bg-warning bg-opacity-25 p-2 rounded-circle" style="width: 48px; height: 48px; display: flex; align-items: center; justify-content: center;">
                                        <i data-lucide="award" style="width: 24px; height: 24px; color: var(--bs-warning);"></i>
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="fw-bold mb-1">@award.Title</h6>
                                    @if (!string.IsNullOrWhiteSpace(award.Description))
                                    {
                                        <p class="small text-muted mb-2">@award.Description</p>
                                    }
                                    <div class="d-flex gap-2 flex-wrap">
                                        <span class="badge bg-light text-dark border small">
                                            <i data-lucide="calendar" style="width: 12px; height: 12px;"></i>
                                            @award.AwardedAt.ToString("dd MMM yyyy")
                                        </span>
                                        @if (!string.IsNullOrWhiteSpace(award.SemesterName))
                                        {
                                            <span class="badge bg-primary small">@award.SemesterName</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                @if (Model.Awards.Count > 6)
                {
                    <div class="text-center mt-3">
                        <small class="text-muted">And @(Model.Awards.Count - 6) more award@(Model.Awards.Count - 6 > 1 ? "s" : "")...</small>
                    </div>
                }
            </div>
        </div>
    }

    <!-- Additional Info -->
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h6 class="fw-bold mb-2"><i class="bi bi-info-circle"></i> Club Information</h6>
                    <ul class="list-unstyled mb-0">
                        <li class="mb-2"><strong>Category:</strong> @c.CategoryName</li>
                        <li class="mb-2"><strong>Founded:</strong> @c.FoundedDate.ToString("MMMM dd, yyyy")</li>
                        <li class="mb-2"><strong>Status:</strong> 
                            @if (c.IsActive)
                            {
                                <span class="badge bg-success">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">Inactive</span>
                            }
                        </li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h6 class="fw-bold mb-2"><i class="bi bi-chat-dots"></i> About</h6>
                    <p class="mb-0">@(c.Description ?? "No description available.")</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Club Activities -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5 class="fw-bold mb-0">
                    <i class="bi bi-calendar-event"></i> Club Activities
                </h5>
                <span class="badge bg-primary">@Model.Activities.Count Total</span>
            </div>

            @if (Model.Activities.Any())
            {
                <div class="row g-3">
                    @foreach (var activity in Model.Activities)
                    {
                        var statusBadgeClass = activity.Status switch
                        {
                            "Approved" => "bg-success",
                            "PendingApproval" => "bg-warning text-dark",
                            "Completed" => "bg-secondary",
                            "Rejected" => "bg-danger",
                            _ => "bg-secondary"
                        };

                        // Use local time for comparison (assume DB stores local time)
                        var now = DateTime.Now;
                        var isEnded = activity.EndTime < now;  // Activity has fully ended
                        var isOngoing = activity.StartTime <= now && now <= activity.EndTime;  // Currently happening
                        var isUpcoming = now < activity.StartTime && activity.Status == "Approved";  // Not started yet

                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="card h-100 border-0 shadow-sm @(isEnded ? "opacity-75" : "")">
                                @if (!string.IsNullOrWhiteSpace(activity.ImageUrl))
                                {
                                    <img src="@activity.ImageUrl" 
                                         class="card-img-top" 
                                         style="height: 150px; object-fit: cover;"
                                         alt="@activity.Title"
                                         onerror="this.style.display='none'">
                                }
                                <div class="card-body">
                                    <div class="d-flex justify-content-between mb-2">
                                        <span class="badge @statusBadgeClass small">@activity.Status</span>
                                        <span class="badge bg-info small">@activity.Type</span>
                                    </div>

                                    @if (!activity.IsPublic)
                                    {
                                        <span class="badge bg-warning text-dark mb-2">
                                            <i class="bi bi-lock"></i> Members Only
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-primary mb-2">
                                            <i class="bi bi-globe"></i> Public
                                        </span>
                                    }

                                    <h6 class="fw-bold mb-2">@activity.Title</h6>

                                    <div class="small text-muted mb-3">
                                        <div class="mb-1">
                                            <i class="bi bi-calendar3"></i> 
                                            @activity.StartTime.ToString("MMM dd, yyyy")
                                        </div>
                                        <div class="mb-1">
                                            <i class="bi bi-clock"></i> 
                                            @activity.StartTime.ToString("HH:mm") - @activity.EndTime.ToString("HH:mm")
                                        </div>
                                        @if (!string.IsNullOrWhiteSpace(activity.Location))
                                        {
                                            <div class="mb-1">
                                                <i class="bi bi-geo-alt"></i> @activity.Location
                                            </div>
                                        }
                                        <div>
                                            <i class="bi bi-award"></i> 
                                            <strong>+@activity.MovementPoint pts</strong>
                                        </div>
                                    </div>

                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="text-muted">
                                            @activity.CurrentParticipants@(activity.MaxParticipants.HasValue ? $"/{activity.MaxParticipants}" : "") registered
                                        </small>
                                        
                                        @if ((isUpcoming || isOngoing) && activity.CanRegister && !activity.IsFull)
                                        {
                                            @if (activity.IsPublic)
                                            {
                                                <button class="btn btn-success btn-sm" onclick="alert('Registration coming soon!')">
                                                    <i class="bi bi-check-circle"></i> Register
                                                </button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-warning btn-sm" title="Members only">
                                                    <i class="bi bi-lock"></i> Member Only
                                                </button>
                                            }
                                        }
                                        else if (isOngoing && activity.IsFull)
                                        {
                                            <span class="badge bg-warning">Ongoing - Full</span>
                                        }
                                        else if (isOngoing)
                                        {
                                            <span class="badge bg-success">Happening Now</span>
                                        }
                                        else if (activity.IsFull)
                                        {
                                            <span class="badge bg-danger">Full</span>
                                        }
                                        else if (isEnded)
                                        {
                                            <span class="badge bg-secondary">Ended</span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="text-center mt-4">
                    <a href="/Activities?filter=club&clubId=@c.Id" class="btn btn-outline-primary">
                        View All Activities <i class="bi bi-arrow-right"></i>
                    </a>
                </div>
            }
            else
            {
                <div class="alert alert-info mb-0">
                    <i class="bi bi-info-circle"></i> No activities scheduled yet. Check back later!
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Safe Lucide initialization
        function safeCreateIcons() {
            if (typeof lucide !== 'undefined' && lucide.createIcons) {
                try {
                    lucide.createIcons();
                    console.log('Lucide icons created successfully');
                } catch (e) {
                    console.error('Error creating Lucide icons:', e);
                }
            } else {
                console.log('Lucide not ready, retrying...');
                setTimeout(safeCreateIcons, 100);
            }
        }

        const clubId = @c.Id;
        const isRecruitmentOpen = @c.IsRecruitmentOpen.ToString().ToLower();

        // Check application status on page load
        document.addEventListener('DOMContentLoaded', async () => {
            // Initialize icons when DOM is ready
            safeCreateIcons();
            
            // Reinitialize after a delay to catch any late-rendered elements
            setTimeout(safeCreateIcons, 300);
            setTimeout(safeCreateIcons, 1000);
            // Check for application submitted notification
            const applicationSubmitted = sessionStorage.getItem('applicationSubmitted');
            if (applicationSubmitted) {
                try {
                    const data = JSON.parse(applicationSubmitted);
            if (typeof success === 'function') {
                success(data.title, data.message, 5000);
            }
            sessionStorage.removeItem('applicationSubmitted');
        } catch (e) {
            console.error('Error parsing application submitted notification:', e);
        }
    }
    
    // Don't load via JavaScript - server-side already handles it
    // await loadApplicationStatus();
});

        async function loadApplicationStatus() {
            const container = document.getElementById('applicationStatusContainer');
            console.log('Loading application status for clubId:', clubId);
            console.log('isRecruitmentOpen:', isRecruitmentOpen);

            try {
                // Try to get user's existing request
                const response = await fetch(`https://localhost:5001/api/joinrequest/my-request/${clubId}`, {
                    method: 'GET',
                    credentials: 'include'
                });

                console.log('API response status:', response.status);

                if (response.ok) {
                    // User has an existing request
                    const request = await response.json();
                    console.log('User has existing request:', request);
                    container.innerHTML = getRequestStatusHtml(request);
                } else if (response.status === 404) {
                    // No existing request - show apply button or closed message
                    console.log('No existing request found - showing apply button');
                    container.innerHTML = getApplyButtonHtml();
                } else if (response.status === 401) {
                    // User not logged in - show recruitment status only
                    console.log('User not authenticated');
                    container.innerHTML = getRecruitmentStatusHtml();
                } else {
                    // Other status codes - show recruitment status
                    console.warn('Unexpected status code:', response.status);
                    container.innerHTML = getApplyButtonHtml();
                }
            } catch (error) {
                console.error('Error loading application status:', error);
                // Always show something even if there's an error
                container.innerHTML = getApplyButtonHtml();
            }

            safeCreateIcons();
        }

        function getRequestStatusHtml(request) {
            const statusColors = {
                'Pending': { bg: 'warning', icon: 'clock', text: 'Your application is pending review' },
                'Approved': { bg: 'success', icon: 'check-circle', text: 'Congratulations! Your application has been approved' },
                'Rejected': { bg: 'danger', icon: 'x-circle', text: 'Your application was not approved' }
            };

            const status = statusColors[request.status] || statusColors['Pending'];
            const appliedDate = new Date(request.createdAt).toLocaleDateString('vi-VN');
            
            let actionButton = '';
            if (request.status === 'Pending') {
                actionButton = `
                    <span class="badge bg-warning fs-6 px-3 py-2">
                        <i data-lucide="clock" style="width: 16px; height: 16px;"></i>
                        Under Review
                    </span>
                `;
            } else if (request.status === 'Approved') {
                actionButton = `
                    <span class="badge bg-success fs-6 px-3 py-2">
                        <i data-lucide="check" style="width: 16px; height: 16px;"></i>
                        You're a member!
                    </span>
                `;
            } else if (request.status === 'Rejected' && isRecruitmentOpen) {
                actionButton = `
                    <button class="btn btn-secondary" onclick="alert('Please contact club manager for more information')">
                        <i data-lucide="info" style="width: 16px; height: 16px;"></i>
                        More Info
                    </button>
                `;
            }

            return `
                <div class="alert alert-${status.bg} d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <i data-lucide="${status.icon}" style="width: 20px; height: 20px;"></i>
                        <strong>Application Status: ${request.status}</strong>
                        <span class="ms-2">${status.text}</span>
                        <br/>
                        <small>Applied on: ${appliedDate}</small>
                        ${request.departmentName ? `<br/><small>Department: <strong>${request.departmentName}</strong></small>` : ''}
                    </div>
                    <div>
                        ${actionButton}
                    </div>
                </div>
            `;
        }

        function getApplyButtonHtml() {
            if (isRecruitmentOpen) {
                return `
                    <div class="alert alert-success d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <i data-lucide="user-plus" style="width: 20px; height: 20px;"></i>
                            <strong>Recruitment is OPEN!</strong>
                            <span class="ms-2">We're looking for passionate members to join our club.</span>
                        </div>
                        <a href="/Clubs/Apply/${clubId}" class="btn btn-success">
                            <i data-lucide="send" style="width: 16px; height: 16px;"></i>
                            Apply Now
                        </a>
                    </div>
                `;
            } else {
                return getRecruitmentStatusHtml();
            }
        }

        function getRecruitmentStatusHtml() {
            if (isRecruitmentOpen) {
                return `
                    <div class="alert alert-info d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <i data-lucide="user-plus" style="width: 20px; height: 20px;"></i>
                            <strong>Recruitment is OPEN!</strong>
                            <span class="ms-2">Login to apply and join our club.</span>
                        </div>
                        <a href="/Auth/Login" class="btn btn-primary">
                            <i data-lucide="log-in" style="width: 16px; height: 16px;"></i>
                            Login to Apply
                        </a>
                    </div>
                `;
            } else {
                return `
                    <div class="alert alert-secondary d-flex align-items-center mb-4">
                        <i data-lucide="door-closed" style="width: 20px; height: 20px; margin-right: 8px;"></i>
                        <span>Recruitment is currently closed. Check back later for opportunities to join!</span>
                    </div>
                `;
            }
        }
    </script>
}
