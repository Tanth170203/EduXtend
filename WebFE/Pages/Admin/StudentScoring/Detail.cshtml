@page
@using BusinessObject.DTOs.MovementRecord
@model WebFE.Pages.Admin.StudentScoring.DetailModel
@{
    ViewData["Title"] = "Movement Record Detail";
    ViewData["Breadcrumb"] = "Detail";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
        <div>
            <h1 class="page-title">Movement Record Detail</h1>
            <p class="page-description">View detailed activity scoring for the student</p>
        </div>
        <div>
            <a href="/Admin/StudentScoring" class="btn btn-secondary">
                <i data-lucide="arrow-left" style="width: 16px; height: 16px;"></i>
                Back
            </a>
            @if (Model.Record != null)
            {
                <a href="/Admin/StudentScoring/AddScore?studentId=@Model.Record.StudentId&studentName=@Uri.EscapeDataString(Model.Record.StudentName ?? string.Empty)&studentCode=@Model.Record.StudentCode" class="btn btn-warning ms-2">
                    <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                    âž• Add Score
                </a>
            }
        </div>
    </div>
</div>

@if (Model.Record != null)
{
    <!-- Student Info -->
    <div class="content-card mb-4">
        <div class="content-card-header">
            <h3 class="content-card-title">Student Information</h3>
        </div>
        <div class="content-card-body">
            <div class="row">
                <div class="col-md-3">
                    <strong>Full name:</strong>
                    <p>@Model.Record.StudentName</p>
                </div>
                <div class="col-md-3">
                    <strong>Student code:</strong>
                    <p>@Model.Record.StudentCode</p>
                </div>
                <div class="col-md-3">
                    <strong>Semester:</strong>
                    <p>@Model.Record.SemesterName</p>
                </div>
                <div class="col-md-3">
                    <strong>Total score:</strong>
                    <p class="fs-4 fw-bold text-primary">@Model.Record.TotalScore.ToString("F1") / 100</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Score Details -->
    <div class="content-card">
        <div class="content-card-header">
            <h3 class="content-card-title">Details by Criterion</h3>
        </div>
        <div class="content-card-body">
            @if (Model.Record.Details.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Criterion group</th>
                                <th>Criterion</th>
                                <th>Max score</th>
                                <th>Score achieved</th>
                                <th>Source</th>
                                <th>Note</th>
                                <th>Date awarded</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in Model.Record.Details.OrderBy(d => d.GroupName))
                            {
                                <tr>
                                    <td>@detail.GroupName</td>
                                    <td>@detail.CriterionTitle</td>
                                    <td>@detail.CriterionMaxScore</td>
                                    <td>
                                        <strong class="text-success">@detail.Score</strong>
                                    </td>
                                    <td>@(string.IsNullOrWhiteSpace(detail.ScoreType) ? "Auto" : detail.ScoreType)</td>
                                    <td>@detail.Note</td>
                                    <td>@detail.AwardedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Score Chart (Group by Criterion Group) -->
                <div class="mt-4">
                    <h5>Statistics by Criterion Group</h5>
                    <div class="row">
                        @if (Model.Record?.CategoryScores != null && Model.Record.CategoryScores.Any())
                        {
                            @foreach (var category in Model.Record.CategoryScores)
                            {
                                <div class="col-md-4 mb-3">
                                    <div class="card">
                                        <div class="card-body">
                                            <h6 class="card-title">@category.GroupName</h6>
                                            <p class="card-text fs-4 fw-bold text-primary">@category.CappedScore points</p>
                                            @if (category.IsCapped)
                                            {
                                                <small class="text-muted">
                                                    <i data-lucide="alert-circle" style="width: 14px; height: 14px;"></i>
                                                    Reached cap (@category.MaxScore points)
                                                </small>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            @* Fallback: Calculate from details if CategoryScores not available *@
                            var groupedScores = Model.Record?.Details
                                ?.GroupBy(d => d.GroupName)
                                ?.Select(g => new { GroupName = g.Key, TotalScore = g.Sum(d => d.Score) })
                                ?.OrderByDescending(g => g.TotalScore);
                            
                            if (groupedScores != null)
                            {
                                foreach (var group in groupedScores)
                                {
                                    <div class="col-md-4 mb-3">
                                        <div class="card">
                                            <div class="card-body">
                                                <h6 class="card-title">@group.GroupName</h6>
                                                <p class="card-text fs-4 fw-bold text-primary">@group.TotalScore points</p>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i data-lucide="inbox" style="width: 48px; height: 48px; color: #9ca3af;"></i>
                    <p class="text-muted mt-3">No detailed scores yet</p>
                </div>
            }
        </div>
    </div>
}
else
{
    <div class="alert alert-warning">
        <i data-lucide="alert-triangle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        Movement record not found.
    </div>
}

@section Scripts {
    <script>
        function safeLucide(){ if(window.lucide && typeof lucide.createIcons==='function'){ try{ lucide.createIcons(lucide.icons||{});}catch{}} }
        document.addEventListener('DOMContentLoaded', safeLucide);
        window.addEventListener('load', safeLucide);
    </script>
}
