@page
@using BusinessObject.DTOs.Semester
@using WebFE.Extensions
@model WebFE.Pages.Admin.Semesters.IndexModel
@{
    ViewData["Title"] = "Semester Management";
    ViewData["Breadcrumb"] = "Semesters";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/systemconfig.css" asp-append-version="true" />
}

@* Add antiforgery token for AJAX requests *@
<form id="antiforgeryForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
        <div>
            <h1 class="page-title">Quản lý học kỳ</h1>
            <p class="page-description">Quản lý các học kỳ trong hệ thống</p>
        </div>
        <a href="/Admin/Semesters/Add" class="btn btn-primary d-flex align-items-center gap-2">
            <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
            Thêm học kỳ mới
        </a>
    </div>
</div>

<!-- Alert Messages -->
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i data-lucide="check-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i data-lucide="alert-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Stats -->
<div class="stats-grid mb-4">
    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Tổng số học kỳ</p>
            </div>
            <div class="stat-card-icon blue">
                <i data-lucide="calendar" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Semesters.Count</div>
        <p class="text-muted small mb-0">Tất cả học kỳ trong hệ thống</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Đang hoạt động</p>
            </div>
            <div class="stat-card-icon green">
                <i data-lucide="play-circle" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Semesters.Count(s => s.GetStatusLabel() == "Active")</div>
        <p class="text-muted small mb-0">Current semester</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Sắp diễn ra</p>
            </div>
            <div class="stat-card-icon purple">
                <i data-lucide="clock" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Semesters.Count(s => s.GetStatusLabel() == "Upcoming")</div>
        <p class="text-muted small mb-0">Upcoming semester</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Đã kết thúc</p>
            </div>
            <div class="stat-card-icon orange">
                <i data-lucide="pause-circle" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Semesters.Count(s => s.GetStatusLabel() == "Completed")</div>
        <p class="text-muted small mb-0">Past semester</p>
    </div>
</div>

<!-- Semesters Table -->
<div class="content-card">
    <div class="content-card-header">
        <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
            <div>
                <h5 class="content-card-title mb-1">Danh sách học kỳ</h5>
                <p class="text-muted mb-0">Quản lý tất cả học kỳ trong hệ thống</p>
            </div>
            <div class="d-flex gap-2">
                <div class="input-group" style="width: 300px;">
                    <span class="input-group-text bg-white">
                        <i data-lucide="search" style="width: 16px; height: 16px;"></i>
                    </span>
                    <input type="text" class="form-control" placeholder="Search semesters..." id="searchInput">
                </div>
            </div>
        </div>
    </div>
    <div class="content-card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover mb-0 semester-table">
                <thead class="semester-table-header">
                    <tr>
                        <th class="semester-th">Tên học kỳ</th>
                        <th class="semester-th">Ngày bắt đầu</th>
                        <th class="semester-th">Ngày kết thúc</th>
                        <th class="semester-th">Thời lượng</th>
                        <th class="semester-th">Trạng thái</th>
                        <th class="semester-th text-end">Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Semesters.Any())
                    {
                        foreach (var semester in Model.Semesters.OrderByDescending(s => s.StartDate))
                        {
                            var duration = (semester.EndDate - semester.StartDate).Days;
                            <tr class="semester-row" data-id="@semester.Id">
                                <td class="semester-td">
                                    <div class="d-flex align-items-center">
                                        <div class="semester-icon me-3">
                                            <i data-lucide="calendar" style="width: 18px; height: 18px; color: var(--primary);"></i>
                                        </div>
                                        <div>
                                            <div class="semester-name">@semester.Name</div>
                                            <div class="semester-id text-muted small">ID: @semester.Id</div>
                                        </div>
                                    </div>
                                </td>
                                <td class="semester-td">
                                    <div class="date-info">
                                        <div class="date-value">@semester.StartDate.ToString("dd/MM/yyyy")</div>
                                        <div class="date-day text-muted small">@semester.StartDate.ToString("dddd", new System.Globalization.CultureInfo("vi-VN"))</div>
                                    </div>
                                </td>
                                <td class="semester-td">
                                    <div class="date-info">
                                        <div class="date-value">@semester.EndDate.ToString("dd/MM/yyyy")</div>
                                        <div class="date-day text-muted small">@semester.EndDate.ToString("dddd", new System.Globalization.CultureInfo("vi-VN"))</div>
                                    </div>
                                </td>
                                <td class="semester-td">
                                    <span class="text-muted">@duration ngày</span>
                                </td>
                                <td class="semester-td">
                                    <span class="semester-status-badge @semester.GetStatusBadgeClass()">
                                        <i data-lucide="@(semester.GetStatusLabel() == "Active" ? "play-circle" : semester.GetStatusLabel() == "Upcoming" ? "clock" : "pause-circle")" style="width: 12px; height: 12px;"></i>
                                        @semester.GetStatusLabel()
                                    </span>
                                </td>
                                <td class="semester-td text-end">
                                    <div class="semester-actions">
                                        <a href="/Admin/Semesters/Edit?id=@semester.Id" class="btn btn-sm btn-outline-primary me-2" title="Edit">
                                            <i data-lucide="edit-3" style="width: 14px; height: 14px;"></i>
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger semester-btn-delete" 
                                                data-bs-toggle="modal" data-bs-target="#deleteSemesterModal"
                                                data-semester-id="@semester.Id"
                                                data-semester-name="@semester.Name"
                                                title="Delete">
                                            <i data-lucide="trash-2" style="width: 14px; height: 14px;"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="semester-empty-state">
                                <div class="empty-state-content">
                                    <div class="empty-state-icon">
                                        <i data-lucide="calendar-x" style="width: 64px; height: 64px;"></i>
                                    </div>
                                    <h4 class="empty-state-title">Chưa có học kỳ nào</h4>
                                    <p class="empty-state-description">Bắt đầu bằng cách thêm học kỳ đầu tiên vào hệ thống</p>
                                    <button type="button" class="btn btn-primary" data-action="add-semester">
                                        <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                                        Thêm học kỳ đầu tiên
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<!-- Delete Confirm Modal -->
<div class="modal fade" id="deleteSemesterModal" tabindex="-1" aria-labelledby="deleteSemesterModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteSemesterModalLabel">Xác nhận xóa học kỳ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <i data-lucide="alert-triangle" style="width: 48px; height: 48px; color: #ef4444; margin-bottom: 1rem;"></i>
                    <p>Bạn có chắc chắn muốn xóa học kỳ <strong class="semester-name-to-delete"></strong>?</p>
                    <p class="text-muted small">Hành động này không thể hoàn tác.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form method="post" asp-page-handler="DeleteSemester" style="display: inline;">
                    <input type="hidden" name="Id" id="deleteId">
                    <button type="submit" class="btn btn-danger">Xóa học kỳ</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Lucide icons
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
            
            // Search functionality
            const searchInput = document.getElementById('searchInput');
            if (searchInput) {
                searchInput.addEventListener('input', function(e) {
                    const searchTerm = e.target.value.toLowerCase();
                    const rows = document.querySelectorAll('.semester-row');
                    
                    rows.forEach(row => {
                        const name = row.querySelector('.semester-name')?.textContent.toLowerCase() || '';
                        const shouldShow = name.includes(searchTerm);
                        row.style.display = shouldShow ? '' : 'none';
                    });
                });
            }
            
            // Delete button click - populate modal
            document.querySelectorAll('[data-semester-name]').forEach(btn => {
                if (btn.dataset.semesterId) {
                    btn.addEventListener('click', function() {
                        const name = this.dataset.semesterName;
                        const id = this.dataset.semesterId;
                        
                        document.querySelector('.semester-name-to-delete').textContent = name;
                        document.getElementById('deleteId').value = id;
                    });
                }
            });
        });
    </script>
}

