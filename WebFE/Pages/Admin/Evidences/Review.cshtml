@page
@model WebFE.Pages.Admin.Evidences.ReviewModel
@using System.Text.RegularExpressions
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

@{
    ViewData["Title"] = "Review Evidence";
    ViewData["Breadcrumb"] = "Review Evidence";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";

    // Get API BaseUrl from FE appsettings.json
    var ApiBase = (Configuration["ApiSettings:BaseUrl"] ?? string.Empty).TrimEnd('/');

    // Convert to preview URL (remove fl_attachment if present)
    string ToPreviewUrl(string? url)
    {
        if (string.IsNullOrWhiteSpace(url)) return url ?? "";
        // Remove /fl_attachment:.../ pattern to get preview URL
        return Regex.Replace(url, "/fl_attachment:[^/]+/", "/", RegexOptions.IgnoreCase);
    }
}

<div class="page-header">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
        <div>
            <h1 class="page-title">
                <i data-lucide="file-check" style="width: 28px; height: 28px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                Duyệt Minh chứng
            </h1>
            <p class="page-description">
                @if (Model.Evidence != null)
                {
                    <text>@Model.Evidence.Title - Sinh viên: @Model.Evidence.StudentName (@Model.Evidence.StudentCode)</text>
                }
            </p>
        </div>
        @if (Model.Evidence != null)
        {
            <div>
                <span class="badge bg-@(Model.Evidence.Status == "Pending" ? "warning" : Model.Evidence.Status == "Approved" ? "success" : "danger") fs-6 px-3 py-2">
                    <i data-lucide="@(Model.Evidence.Status == "Pending" ? "clock" : Model.Evidence.Status == "Approved" ? "check-circle" : "x-circle")" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                    @Model.Evidence.Status
                </span>
            </div>
        }
    </div>
</div>

@* Alert Messages *@
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i data-lucide="alert-circle" style="width: 20px; height: 20px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (Model.Evidence != null)
{
    var previewUrl = !string.IsNullOrWhiteSpace(Model.Evidence.FilePath)
        ? ToPreviewUrl(Model.Evidence.FilePath)
        : null;

    <div class="row g-4">
        @* Left Column: Evidence Information *@
        <div class="col-lg-8">
            @* Evidence Basic Info Card *@
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-light border-bottom py-3">
                    <h5 class="mb-0">
                        <i data-lucide="file-text" style="width: 20px; height: 20px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                        Thông tin chung
                    </h5>
                </div>
                <div class="card-body">
                    @* 4 Column Info Grid *@
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted small mb-1">
                                <i data-lucide="user" style="width: 14px; height: 14px; display: inline-block; vertical-align: middle; margin-right: 0.3rem;"></i>
                                Sinh viên
                            </label>
                            <p class="fw-bold mb-0">@Model.Evidence.StudentName</p>
                            <small class="text-muted">@Model.Evidence.StudentCode</small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted small mb-1">
                                <i data-lucide="calendar" style="width: 14px; height: 14px; display: inline-block; vertical-align: middle; margin-right: 0.3rem;"></i>
                                Ngày nộp
                            </label>
                            <p class="fw-bold mb-0">@Model.Evidence.SubmittedAt.ToString("dd/MM/yyyy")</p>
                            <small class="text-muted">@Model.Evidence.SubmittedAt.ToString("HH:mm")</small>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted small mb-1">
                                <i data-lucide="target" style="width: 14px; height: 14px; display: inline-block; vertical-align: middle; margin-right: 0.3rem;"></i>
                                Tiêu chí
                            </label>
                            @if (!string.IsNullOrEmpty(Model.Evidence.CriterionTitle))
                            {
                                <div>
                                    <span class="badge bg-info">@Model.Evidence.CriterionTitle</span>
                                    @if (Model.Evidence.CriterionMaxScore > 0)
                                    {
                                        <small class="text-muted ms-2">(Max: @Model.Evidence.CriterionMaxScore đ)</small>
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-muted mb-0">Chưa chọn</p>
                            }
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label text-muted small mb-1">
                                <i data-lucide="file" style="width: 14px; height: 14px; display: inline-block; vertical-align: middle; margin-right: 0.3rem;"></i>
                                Tiêu đề
                            </label>
                            <p class="fw-bold mb-0 text-truncate" title="@Model.Evidence.Title">@Model.Evidence.Title</p>
                        </div>
                    </div>
                </div>
            </div>

            @* Description Card *@
            @if (!string.IsNullOrEmpty(Model.Evidence.Description))
            {
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-light border-bottom py-3">
                        <h5 class="mb-0">
                            <i data-lucide="file-text" style="width: 20px; height: 20px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                            Mô tả chi tiết
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="mb-0">@Model.Evidence.Description</p>
                    </div>
                </div>
            }

            @* File Evidence Card *@
            <div class="card border-0 shadow-sm">
                <div class="card-header bg-light border-bottom py-3">
                    <h5 class="mb-0">
                        <i data-lucide="paperclip" style="width: 20px; height: 20px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                        Tệp minh chứng
                    </h5>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Evidence.FilePath))
                    {
                        <div class="d-flex align-items-center justify-content-between p-3 bg-light rounded">
                            <div class="d-flex align-items-center gap-3">
                                <i data-lucide="file" style="width: 32px; height: 32px; color: #0dcaf0;"></i>
                                <div>
                                    <p class="mb-0 fw-bold">Cloudinary URL</p>
                                    <small class="text-muted">Nhấn để xem trước</small>
                                </div>
                            </div>
                            <!-- Removed preview button as info is already shown in index page -->
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4 text-muted">
                            <i data-lucide="x-circle" style="width: 48px; height: 48px; opacity: 0.5;"></i>
                            <p class="mt-2 mb-0">Không có file</p>
                        </div>
                    }
                </div>
            </div>
        </div>

        @* Right Column: Review Form *@
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm sticky-top" style="top: 80px;">
                <div class="card-header bg-success text-white py-3">
                    <h5 class="mb-0">
                        <i data-lucide="check-circle" style="width: 20px; height: 20px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                        Duyệt minh chứng
                    </h5>
                </div>

                <div class="card-body">
                    <form method="post">
                        <input type="hidden" asp-for="Input.Id" />

                        @* Status Selection *@
                        <div class="mb-3">
                            <label asp-for="Input.Status" class="form-label fw-bold">Trạng thái <span class="text-danger">*</span></label>
                            <select asp-for="Input.Status" class="form-select form-select-lg" required onchange="togglePointsFieldOnChange(this)">
                                <option value="">-- Chọn trạng thái --</option>
                                <option value="Approved">✅ Duyệt (Approved)</option>
                                <option value="Rejected">❌ Từ chối (Rejected)</option>
                            </select>
                            <span asp-validation-for="Input.Status" class="text-danger small"></span>
                        </div>

                        @* Points Field *@
                        @{
                            var maxScore = Model.Evidence?.CriterionMaxScore ?? 0;
                            var pointsValue = Model.Input?.Points > 0 ? Model.Input.Points.ToString() : "";
                        }

                        <div class="mb-3" id="pointsField" style="display: none;">
                            <label class="form-label fw-bold">Điểm cộng</label>

                            @if (maxScore > 0)
                            {
                                <div class="alert alert-info mb-2">
                                    <small class="mb-0">
                                        <i data-lucide="info" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle;"></i>
                                        <strong>Tiêu chí:</strong> @Model.Evidence.CriterionTitle<br />
                                        <strong>Phạm vi:</strong> 0 - @maxScore điểm
                                    </small>
                                </div>
                            }

                            @if (maxScore > 0)
                            {
                                <input type="number" 
                                       id="Input_Points"
                                       name="Input.Points" 
                                       value="@pointsValue"
                                       step="0.5" 
                                       min="0"
                                       max="@maxScore"
                                       class="form-control form-control-lg" 
                                       placeholder="Nhập điểm" />
                            }
                            else
                            {
                                <input type="number" 
                                       id="Input_Points"
                                       name="Input.Points" 
                                       value="@pointsValue"
                                       step="0.5" 
                                       min="0"
                                       class="form-control form-control-lg" 
                                       placeholder="Nhập điểm" />
                            }
                            <span asp-validation-for="Input.Points" class="text-danger small"></span>
                        </div>

                        @* Comment Field *@
                        <div class="mb-3">
                            <label asp-for="Input.Comment" class="form-label fw-bold">Nhận xét/Ghi chú</label>
                            <textarea asp-for="Input.Comment" 
                                      class="form-control" 
                                      rows="3" 
                                      placeholder="Nhập nhận xét (tùy chọn)"></textarea>
                            <small class="text-muted">Tối đa 255 ký tự</small>
                            <span asp-validation-for="Input.Comment" class="text-danger small"></span>
                        </div>

                        @* Info Alert *@
                        <div class="alert alert-warning mb-3">
                            <i data-lucide="alert-triangle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                            <small><strong>Lưu ý:</strong> Sinh viên sẽ nhận thông báo sau duyệt.</small>
                        </div>

                        @* Buttons *@
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-success btn-lg">
                                <i data-lucide="check" style="width: 18px; height: 18px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                                Xác nhận duyệt
                            </button>
                            <a asp-page="/Admin/Evidences/Index" class="btn btn-outline-secondary">
                                <i data-lucide="x" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
                                Quay lại
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-info text-center py-5">
        <i data-lucide="inbox" style="width: 48px; height: 48px; display: inline-block; margin-bottom: 1rem; color: #0dcaf0;"></i>
        <p class="mb-0">Không thể tải thông tin minh chứng.</p>
        <a href="/Admin/Evidences" class="btn btn-info mt-3">Quay lại danh sách</a>
    </div>
}

<style>
    .page-header {
        padding-bottom: 1.5rem;
        border-bottom: 1px solid #e9ecef;
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 1.75rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: #212529;
    }

    .page-description {
        font-size: 0.95rem;
        color: #6c757d;
        margin-bottom: 0;
    }

    .info-group {
        margin-bottom: 1rem;
    }

    .sticky-top {
        z-index: 100;
    }

    .card {
        transition: all 0.3s ease;
    }

    .card-header {
        background-color: #f8f9fa !important;
    }

    @@media (max-width: 991.98px) {
        .page-header {
            padding-bottom: 1rem;
            margin-bottom: 1.5rem;
        }

        .page-title {
            font-size: 1.5rem;
        }

        .sticky-top {
            position: relative;
            top: auto !important;
        }
    }
</style>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        function safeCreateLucideIcons() {
            try {
                if (typeof lucide !== 'undefined' && typeof lucide.createIcons === 'function') {
                    lucide.createIcons(lucide.icons || {});
                }
            } catch (e) {
                console.warn('Lucide initialization failed:', e);
            }
        }

        // Global function to toggle points field
        function togglePointsFieldOnChange(selectElement) {
            console.log('✅ togglePointsFieldOnChange called with value:', selectElement.value);
            const pointsField = document.getElementById('pointsField');
            if (!pointsField) {
                console.warn('⚠️ pointsField element not found');
                return;
            }
            
            if (selectElement.value === 'Approved') {
                console.log('  → Showing points field');
                pointsField.style.display = 'block';
                // Focus on the points input after showing
                setTimeout(() => {
                    const pointsInput = document.getElementById('Input_Points');
                    if (pointsInput) pointsInput.focus();
                }, 100);
            } else {
                console.log('  → Hiding points field');
                pointsField.style.display = 'none';
                const pointsInput = document.getElementById('Input_Points');
                if (pointsInput) pointsInput.value = '0';
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            console.log('🔷 DOMContentLoaded event fired');
            
            // Initialize Lucide icons safely
            safeCreateLucideIcons();

            const statusSelect = document.getElementById('Input_Status');
            const pointsField = document.getElementById('pointsField');

            if (!statusSelect) {
                console.warn('⚠️ statusSelect (Input_Status) not found');
                return;
            }
            
            if (!pointsField) {
                console.warn('⚠️ pointsField element not found');
                return;
            }

            console.log('✅ Both statusSelect and pointsField found');
            
            // Function to toggle points field visibility
            function togglePointsField() {
                console.log('🔷 togglePointsField called');
                console.log('  - Current status value: "' + statusSelect.value + '"');
                
                if (statusSelect.value === 'Approved') {
                    console.log('  - Status is "Approved", showing points field');
                    pointsField.style.display = 'block';
                } else {
                    console.log('  - Status is NOT "Approved", hiding points field');
                    pointsField.style.display = 'none';
                    const pointsInput = document.getElementById('Input_Points');
                    if (pointsInput) {
                        console.log('  - Resetting points input to 0');
                        pointsInput.value = '0';
                    }
                }
            }

            // Handle status select change event
            statusSelect.addEventListener('change', function() {
                console.log('✅ Status select changed to:', this.value);
                togglePointsField();
            });

            // Check initial state on page load
            console.log('🔷 Checking initial status value on page load:', statusSelect.value);
            if (statusSelect.value === 'Approved') {
                console.log('  - Initial status is "Approved", showing points field');
                togglePointsField();
            } else if (statusSelect.value) {
                console.log('  - Initial status is "' + statusSelect.value + '", hiding points field');
                pointsField.style.display = 'none';
            } else {
                console.log('  - No initial status selected, keeping points field hidden');
                pointsField.style.display = 'none';
            }

            console.log('✅ Points field visibility script initialized successfully');
        });

        // Fallback: also check and initialize when window loads
        window.addEventListener('load', function() {
            console.log('🔷 Window load event fired - double checking points field state');
            safeCreateLucideIcons();
            const statusSelect = document.getElementById('Input_Status');
            if (statusSelect && statusSelect.value === 'Approved') {
                console.log('  → Forcing points field to show');
                const pointsField = document.getElementById('pointsField');
                if (pointsField) {
                    pointsField.style.display = 'block';
                }
            }
        });
    </script>
}
