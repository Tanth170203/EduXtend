@page
@using BusinessObject.DTOs.MovementCriteria
@model WebFE.Pages.Admin.Criteria.IndexModel
@{
    ViewData["Title"] = "Evaluation Criteria Management";
    ViewData["Breadcrumb"] = "Criteria";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/criteria.css" asp-append-version="true" />
}

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
        <div>
            <h1 class="page-title">Quản lý tiêu chí đánh giá</h1>
            <p class="page-description">Quản lý các tiêu chí và nhóm tiêu chí đánh giá sinh hoạt</p>
        </div>
        <div class="d-flex gap-2">
            <a href="/Admin/Criteria/AddGroup" class="btn btn-primary d-flex align-items-center gap-2">
                <i data-lucide="plus" style="width: 16px; height: 16px;"></i>
                Thêm nhóm tiêu chí
            </a>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (!string.IsNullOrEmpty(Model.SuccessMessage))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i data-lucide="check-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @Model.SuccessMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i data-lucide="alert-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @Model.ErrorMessage
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Stats -->
<div class="stats-grid mb-4">
    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Tổng nhóm tiêu chí</p>
            </div>
            <div class="stat-card-icon blue">
                <i data-lucide="folder" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.CriterionGroups.Count</div>
        <p class="text-muted small mb-0">Tất cả nhóm tiêu chí</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Dành cho Sinh viên</p>
            </div>
            <div class="stat-card-icon green">
                <i data-lucide="user-check" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.CriterionGroups.Count(g => g.TargetType == "Student")</div>
        <p class="text-muted small mb-0">Nhóm tiêu chí sinh viên</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Dành cho CLB</p>
            </div>
            <div class="stat-card-icon purple">
                <i data-lucide="users-2" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.CriterionGroups.Count(g => g.TargetType == "Club")</div>
        <p class="text-muted small mb-0">Nhóm tiêu chí CLB</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Tổng tiêu chí</p>
            </div>
            <div class="stat-card-icon orange">
                <i data-lucide="list-checks" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.CriterionGroups.Sum(g => g.CriteriaCount)</div>
        <p class="text-muted small mb-0">Tất cả tiêu chí</p>
    </div>
</div>

<!-- Filter Tabs -->
<div class="content-card mb-4">
    <div class="content-card-body p-3">
        <ul class="nav nav-pills" id="criteriaFilterTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="all-tab" data-bs-toggle="pill" data-bs-target="#all" type="button" role="tab">
                    <i data-lucide="list" style="width: 16px; height: 16px;"></i>
                    Tất cả
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="student-tab" data-bs-toggle="pill" data-bs-target="#student" type="button" role="tab">
                    <i data-lucide="user-check" style="width: 16px; height: 16px;"></i>
                    Sinh viên
                </button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="club-tab" data-bs-toggle="pill" data-bs-target="#club" type="button" role="tab">
                    <i data-lucide="users-2" style="width: 16px; height: 16px;"></i>
                    CLB
                </button>
            </li>
        </ul>
    </div>
</div>

<!-- Criterion Groups List -->
<div class="tab-content" id="criteriaFilterTabsContent">
    <!-- All Tab -->
    <div class="tab-pane fade show active" id="all" role="tabpanel">
        @await Html.PartialAsync("_CriterionGroupsList", Model.CriterionGroups)
    </div>

    <!-- Student Tab -->
    <div class="tab-pane fade" id="student" role="tabpanel">
        @await Html.PartialAsync("_CriterionGroupsList", Model.CriterionGroups.Where(g => g.TargetType == "Student").ToList())
    </div>

    <!-- Club Tab -->
    <div class="tab-pane fade" id="club" role="tabpanel">
        @await Html.PartialAsync("_CriterionGroupsList", Model.CriterionGroups.Where(g => g.TargetType == "Club").ToList())
    </div>
</div>

<!-- Delete Confirm Modal (kept for simple confirmation) -->
<div class="modal fade" id="deleteGroupModal" tabindex="-1" aria-labelledby="deleteGroupModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteGroupModalLabel">Xác nhận xóa nhóm tiêu chí</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="text-center">
                    <i data-lucide="alert-triangle" style="width: 48px; height: 48px; color: #ef4444; margin-bottom: 1rem;"></i>
                    <p>Bạn có chắc chắn muốn xóa nhóm <strong class="group-name-to-delete"></strong>?</p>
                    <p class="text-muted small">Hành động này không thể hoàn tác. Tất cả tiêu chí trong nhóm cũng sẽ bị xóa.</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form method="post" asp-page-handler="DeleteGroup" style="display: inline;">
                    <input type="hidden" name="Id" id="deleteId">
                    <button type="submit" class="btn btn-danger">Xóa nhóm</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize Lucide icons
            if (typeof lucide !== 'undefined') {
                lucide.createIcons();
            }
            
            // Delete button click (only keep delete modal handler)
            document.querySelectorAll('[data-group-id]').forEach(btn => {
                if (btn.classList.contains('btn-delete')) {
                    btn.addEventListener('click', function() {
                        const name = this.dataset.groupName;
                        const id = this.dataset.groupId;
                        
                        document.querySelector('.group-name-to-delete').textContent = name;
                        document.getElementById('deleteId').value = id;
                    });
                }
            });

            // Reinitialize icons after tab change
            document.querySelectorAll('button[data-bs-toggle="pill"]').forEach(tab => {
                tab.addEventListener('shown.bs.tab', function() {
                    if (typeof lucide !== 'undefined') {
                        lucide.createIcons();
                    }
                });
            });
        });
    </script>
}

