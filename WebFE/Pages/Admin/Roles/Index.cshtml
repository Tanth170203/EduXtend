@page
@model WebFE.Pages.Admin.Roles.IndexModel
@{
    ViewData["Title"] = "Roles Management";
    ViewData["Breadcrumb"] = "Roles";
    Layout = "~/Pages/Shared/_AdminLayout.cshtml";
}

<!-- Page Header -->
<div class="page-header">
    <div class="d-flex align-items-center justify-content-between flex-wrap gap-3">
        <div>
            <h1 class="page-title">Roles Management</h1>
            <p class="page-description">Assign and manage user roles</p>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i data-lucide="check-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <i data-lucide="alert-circle" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem;"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Stats -->
<div class="stats-grid mb-4">
    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Total Users</p>
            </div>
            <div class="stat-card-icon blue">
                <i data-lucide="users" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Users.Count</div>
        <p class="text-muted small mb-0">All users in system</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Admins</p>
            </div>
            <div class="stat-card-icon red">
                <i data-lucide="shield" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Users.Count(u => u.Roles.Any(r => r.RoleName == "Admin"))</div>
        <p class="text-muted small mb-0">Administrator accounts</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Students</p>
            </div>
            <div class="stat-card-icon green">
                <i data-lucide="graduation-cap" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Users.Count(u => u.Roles.Any(r => r.RoleName == "Student"))</div>
        <p class="text-muted small mb-0">Student accounts</p>
    </div>

    <div class="stat-card">
        <div class="stat-card-header">
            <div>
                <p class="stat-card-title">Club Managers</p>
            </div>
            <div class="stat-card-icon purple">
                <i data-lucide="briefcase" style="width: 24px; height: 24px;"></i>
            </div>
        </div>
        <div class="stat-card-value">@Model.Users.Count(u => u.Roles.Any(r => r.RoleName == "ClubManager"))</div>
        <p class="text-muted small mb-0">Managing clubs</p>
    </div>
</div>

<!-- Users & Roles Table -->
<div class="content-card">
    <div class="content-card-header">
        <h2 class="content-card-title">Users & Roles</h2>
        <div class="d-flex gap-2">
            <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="Search..." style="max-width: 300px;">
        </div>
    </div>
    <div class="content-card-body">
        @if (Model.Users.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover" id="rolesTable">
                    <thead>
                        <tr>
                            <th>Full Name</th>
                            <th>Email</th>
                            <th>Current Roles</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td><strong>@user.FullName</strong></td>
                                <td>
                                    <div class="d-flex align-items-center gap-1">
                                        <i data-lucide="mail" style="width: 14px; height: 14px; color: #6b7280;"></i>
                                        <span>@user.Email</span>
                                    </div>
                                </td>
                                <td>
                                    @if (user.Roles.Any())
                                    {
                                        @foreach (var role in user.Roles)
                                        {
                                            var badgeClass = role.RoleName switch {
                                                "Admin" => "bg-danger",
                                                "Student" => "bg-primary",
                                                "ClubManager" => "bg-warning",
                                                "ClubMember" => "bg-info",
                                                _ => "bg-secondary"
                                            };
                                            <span class="badge @badgeClass me-1">@role.RoleName</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="text-muted small">No roles assigned</span>
                                    }
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge bg-success">Active</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Banned</span>
                                    }
                                </td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-outline-primary" 
                                            onclick="editRoles(@user.Id, '@user.FullName', '@string.Join(",", user.RoleIds)')"
                                            title="Manage Roles">
                                        <i data-lucide="shield" style="width: 14px; height: 14px;"></i>
                                        Manage Roles
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5 text-muted">
                <i data-lucide="users-x" style="width: 48px; height: 48px; margin-bottom: 1rem;"></i>
                <p>No users found</p>
            </div>
        }
    </div>
</div>

<!-- Edit Roles Modal -->
<div class="modal fade" id="editRolesModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 560px;">
        <div class="modal-content">
            <div class="modal-header">
                <div>
                    <h5 class="modal-title">Manage Roles</h5>
                    <p class="text-muted small mb-0">for <strong id="userName"></strong></p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form method="post" asp-page-handler="UpdateRoles">
                <div class="modal-body">
                    <input type="hidden" name="userId" id="userId" />
                    <div class="mb-3">
                        <i data-lucide="info" style="width: 16px; height: 16px; display: inline-block; vertical-align: middle; margin-right: 0.5rem; color: #3b82f6;"></i>
                        <span class="text-muted">Select roles for this user:</span>
                    </div>
                    @foreach (var role in Model.AllRoles)
                    {
                        <div class="form-check mb-3 p-3 border rounded">
                            <input class="form-check-input role-checkbox" type="checkbox" 
                                   name="roleIds" value="@role.Id" id="role_@role.Id">
                            <label class="form-check-label" for="role_@role.Id" style="cursor: pointer;">
                                <div class="d-flex align-items-center gap-2">
                                    @{
                                        var roleIcon = role.RoleName switch {
                                            "Admin" => "shield",
                                            "Student" => "graduation-cap",
                                            "ClubManager" => "briefcase",
                                            "ClubMember" => "users",
                                            _ => "user"
                                        };
                                    }
                                    <i data-lucide="@roleIcon" style="width: 18px; height: 18px;"></i>
                                    <div>
                                        <strong>@role.RoleName</strong>
                                        @if (!string.IsNullOrEmpty(role.Description))
                                        {
                                            <br/><small class="text-muted">@role.Description</small>
                                        }
                                    </div>
                                </div>
                            </label>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">
                        <i data-lucide="save" style="width: 16px; height: 16px;"></i>
                        Update Roles
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        lucide.createIcons();

        // Search functionality
        document.getElementById('searchInput').addEventListener('keyup', function() {
            const searchValue = this.value.toLowerCase();
            const rows = document.querySelectorAll('#rolesTable tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchValue) ? '' : 'none';
            });
        });

        // Edit roles function
        function editRoles(userId, userName, roleIdsStr) {
            document.getElementById('userId').value = userId;
            document.getElementById('userName').textContent = userName;
            
            // Uncheck all
            document.querySelectorAll('.role-checkbox').forEach(cb => cb.checked = false);
            
            // Check current roles
            if (roleIdsStr) {
                const roleIds = roleIdsStr.split(',').map(id => parseInt(id));
                roleIds.forEach(roleId => {
                    const checkbox = document.getElementById('role_' + roleId);
                    if (checkbox) checkbox.checked = true;
                });
            }
            
            new bootstrap.Modal(document.getElementById('editRolesModal')).show();
            lucide.createIcons();
        }
    </script>
    <style>
        /* Ensure modal stays perfectly centered */
        #editRolesModal .modal-dialog {
            margin: 0 auto;
        }
        #editRolesModal.show .modal-dialog {
            display: flex;
            align-items: center;
            min-height: calc(100% - 1rem);
        }
        
        /* Hover effect for role checkboxes */
        .form-check:has(.role-checkbox) {
            transition: all 0.2s ease;
        }
        .form-check:has(.role-checkbox):hover {
            background-color: #f8f9fa;
            border-color: #3b82f6 !important;
        }
        .form-check:has(.role-checkbox:checked) {
            background-color: #eff6ff;
            border-color: #3b82f6 !important;
        }
    </style>
}

