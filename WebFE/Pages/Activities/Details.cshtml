@page "{id:int}"
@model WebFE.Pages.Activities.DetailsModel
@{
    var activity = Model.Activity!;
    ViewData["Title"] = activity.Title;
    Layout = "~/Pages/Shared/_Layout.cshtml";
    
    var statusBadgeClass = activity.Status switch
    {
        "Approved" => "bg-success",
        "PendingApproval" => "bg-warning text-dark",
        "Completed" => "bg-secondary",
        "Rejected" => "bg-danger",
        _ => "bg-secondary"
    };
    
    // Use local time for comparison (assume DB stores local time)
    var now = DateTime.Now;
    var isEnded = activity.EndTime < now;  // Activity has fully ended
    var isOngoing = activity.StartTime <= now && now <= activity.EndTime;  // Currently happening
    var isUpcoming = now < activity.StartTime && activity.Status == "Approved";  // Not started yet
    var daysUntil = (activity.StartTime - now).Days;
}

<div class="activity-detail container my-5">
    <!-- Back button -->
    <div class="mb-3">
        <a href="/Activities" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Activities
        </a>
    </div>

    <!-- Header with image/banner -->
    <div class="position-relative mb-4">
        @if (!string.IsNullOrWhiteSpace(activity.ImageUrl))
        {
            <img src="@activity.ImageUrl" 
                 class="img-fluid rounded shadow-sm w-100"
                 style="height:300px; object-fit:cover;"
                 alt="@activity.Title">
        }
        else
        {
            <div class="bg-gradient-primary rounded shadow-sm w-100" style="height:300px; display:flex; align-items:center; justify-content:center;">
                <i class="bi bi-calendar-event text-white" style="font-size: 5rem;"></i>
            </div>
        }
        
        <div class="position-absolute bottom-0 start-0 p-4 text-white w-100"
             style="background:linear-gradient(to top,rgba(0,0,0,0.8),transparent)">
            <div class="d-flex gap-2 mb-2">
                <span class="badge @statusBadgeClass">@activity.Status</span>
                <span class="badge bg-info">@activity.Type</span>
                @if (activity.RequiresApproval)
                {
                    <span class="badge bg-secondary">
                        <i class="bi bi-shield-check"></i> Requires Approval
                    </span>
                }
            </div>
            <h1 class="fw-bold mb-2">@activity.Title</h1>
            @if (!string.IsNullOrWhiteSpace(activity.ClubName))
            {
                <p class="mb-0">
                    <i class="bi bi-people"></i> Organized by <strong>@activity.ClubName</strong>
                </p>
            }
        </div>
    </div>

    <!-- Countdown/Status Alert -->
    @if (isOngoing)
    {
        <div class="alert alert-success d-flex align-items-center mb-4">
            <i class="bi bi-play-circle fs-3 me-3"></i>
            <div>
                <h5 class="mb-0">Activity is happening now!</h5>
                <p class="mb-0">Ends at @activity.EndTime.ToString("h:mm tt on MMMM dd, yyyy")</p>
            </div>
        </div>
    }
    else if (isUpcoming && daysUntil <= 7 && daysUntil > 0)
    {
        <div class="alert alert-warning d-flex align-items-center mb-4">
            <i class="bi bi-clock-history fs-3 me-3"></i>
            <div>
                <h5 class="mb-0">Starting soon!</h5>
                <p class="mb-0">This activity starts in <strong>@daysUntil day@(daysUntil != 1 ? "s" : "")</strong></p>
            </div>
        </div>
    }
    else if (isEnded)
    {
        <div class="alert alert-secondary d-flex align-items-center mb-4">
            <i class="bi bi-check-circle fs-3 me-3"></i>
            <div>
                <h5 class="mb-0">This activity has ended</h5>
                <p class="mb-0">Ended on @activity.EndTime.ToString("MMMM dd, yyyy")</p>
            </div>
        </div>
    }

    <div class="row g-4">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Description -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body">
                    <h5 class="fw-bold mb-3"><i class="bi bi-file-text"></i> Description</h5>
                    @if (!string.IsNullOrWhiteSpace(activity.Description))
                    {
                        <p class="text-muted" style="white-space: pre-wrap;">@activity.Description</p>
                    }
                    else
                    {
                        <p class="text-muted fst-italic">No description provided.</p>
                    }
                </div>
            </div>

            <!-- Activity Details -->
            <div class="card shadow-sm border-0 mb-4">
                <div class="card-body">
                    <h5 class="fw-bold mb-3"><i class="bi bi-info-circle"></i> Activity Information</h5>
                    
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-calendar3 text-primary me-3 fs-5"></i>
                                <div>
                                    <small class="text-muted d-block">Start Date</small>
                                    <strong>@activity.StartTime.ToString("dddd, MMMM dd, yyyy")</strong>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-calendar-check text-success me-3 fs-5"></i>
                                <div>
                                    <small class="text-muted d-block">End Date</small>
                                    <strong>@activity.EndTime.ToString("dddd, MMMM dd, yyyy")</strong>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-clock text-info me-3 fs-5"></i>
                                <div>
                                    <small class="text-muted d-block">Time</small>
                                    <strong>@activity.StartTime.ToString("HH:mm") - @activity.EndTime.ToString("HH:mm")</strong>
                                </div>
                            </div>
                        </div>
                        
                        @if (!string.IsNullOrWhiteSpace(activity.Location))
                        {
                            <div class="col-md-6">
                                <div class="d-flex align-items-start">
                                    <i class="bi bi-geo-alt text-danger me-3 fs-5"></i>
                                    <div>
                                        <small class="text-muted d-block">Location</small>
                                        <strong>@activity.Location</strong>
                                    </div>
                                </div>
                            </div>
                        }
                        
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-award text-warning me-3 fs-5"></i>
                                <div>
                                    <small class="text-muted d-block">Training Points</small>
                                    <strong class="text-success">+@activity.MovementPoint points</strong>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="d-flex align-items-start">
                                <i class="bi bi-people text-primary me-3 fs-5"></i>
                                <div>
                                    <small class="text-muted d-block">Capacity</small>
                                    <strong>@activity.CurrentParticipants@(activity.MaxParticipants.HasValue ? $" / {activity.MaxParticipants}" : "") participants</strong>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Organizer Info -->
            @if (activity.ClubId.HasValue)
            {
                <div class="card shadow-sm border-0 mb-4">
                    <div class="card-body">
                        <h5 class="fw-bold mb-3"><i class="bi bi-building"></i> Organized By</h5>
                        <div class="d-flex align-items-center">
                            @if (!string.IsNullOrWhiteSpace(activity.ClubLogo))
                            {
                                <img src="@activity.ClubLogo" 
                                     alt="@activity.ClubName" 
                                     class="rounded-circle me-3"
                                     style="width: 60px; height: 60px; object-fit: cover;">
                            }
                            else
                            {
                                <div class="rounded-circle bg-primary text-white me-3 d-flex align-items-center justify-content-center"
                                     style="width: 60px; height: 60px;">
                                    <i class="bi bi-people fs-4"></i>
                                </div>
                            }
                            <div>
                                <h6 class="mb-1">@activity.ClubName</h6>
                                <a asp-page="/Clubs/Details" asp-route-id="@activity.ClubId" class="text-decoration-none small">
                                    View Club Profile <i class="bi bi-arrow-right"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Statistics -->
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h5 class="fw-bold mb-3"><i class="bi bi-bar-chart"></i> Statistics</h5>
                    <div class="row text-center g-3">
                        <div class="col-4">
                            <div class="p-3 bg-light rounded">
                                <h3 class="text-primary mb-1">@activity.RegisteredCount</h3>
                                <small class="text-muted">Registered</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="p-3 bg-light rounded">
                                <h3 class="text-success mb-1">@activity.AttendedCount</h3>
                                <small class="text-muted">Attended</small>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="p-3 bg-light rounded">
                                <h3 class="text-info mb-1">@activity.FeedbackCount</h3>
                                <small class="text-muted">Feedback</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Registration Card -->
            <div class="card shadow-sm border-0 mb-4 sticky-top" style="top: 20px;">
                <div class="card-body">
                    <h5 class="fw-bold mb-3">Registration</h5>
                    
                    <!-- Visibility Badge -->
                    @if (activity.IsPublic)
                    {
                        <div class="alert alert-info mb-3">
                            <i class="bi bi-globe"></i> 
                            <strong>Public Activity</strong>
                            <p class="mb-0 small">Anyone can register for this activity</p>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-warning mb-3">
                            <i class="bi bi-lock"></i> 
                            <strong>Club Members Only</strong>
                            <p class="mb-0 small">You must be a member of @activity.ClubName to register</p>
                        </div>
                    }

                    <!-- Progress bar -->
                    @if (activity.MaxParticipants.HasValue)
                    {
                        var percentage = (activity.CurrentParticipants * 100.0 / activity.MaxParticipants.Value);
                        var progressClass = percentage >= 90 ? "bg-danger" : percentage >= 70 ? "bg-warning" : "bg-success";
                        
                        <div class="mb-3">
                            <div class="d-flex justify-content-between mb-1">
                                <small class="text-muted">Capacity</small>
                                <small class="text-muted">@activity.CurrentParticipants / @activity.MaxParticipants</small>
                            </div>
                            <div class="progress" style="height: 8px;">
                                <div class="progress-bar @progressClass" 
                                     role="progressbar" 
                                     style="width: @percentage%"
                                     aria-valuenow="@activity.CurrentParticipants" 
                                     aria-valuemin="0" 
                                     aria-valuemax="@activity.MaxParticipants">
                                </div>
                            </div>
                        </div>
                    }

                    <!-- Registration Button -->
                    @if ((isUpcoming || isOngoing) && activity.CanRegister && !activity.IsRegistered)
                    {
                        @if (activity.IsPublic)
                        {
                            <button class="btn btn-success w-100 mb-2" id="registerBtn" onclick="registerActivity(@activity.Id)">
                                <i class="bi bi-check-circle"></i> Register Now
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-warning w-100 mb-2" onclick="alert('Please join the club first to register!')">
                                <i class="bi bi-lock"></i> Members Only
                            </button>
                            @if (activity.ClubId.HasValue)
                            {
                                <a asp-page="/Clubs/Details" asp-route-id="@activity.ClubId" class="btn btn-outline-primary w-100 btn-sm">
                                    Join @activity.ClubName
                                </a>
                            }
                        }
                    }
                    else if (activity.IsRegistered && activity.HasAttended)
                    {
                        <button class="btn btn-success w-100 mb-2" id="registeredBtn" disabled>
                            <i class="bi bi-patch-check-fill"></i> Your attendance has been taken
                        </button>
                    }
                    else if (activity.IsRegistered)
                    {
                        <button class="btn btn-primary w-100 mb-2" id="registeredBtn" disabled>
                            <i class="bi bi-check-circle-fill"></i> Activity registered
                        </button>
                        <button class="btn btn-outline-danger w-100 btn-sm" onclick="unregisterActivity(@activity.Id)">
                            <i class="bi bi-x-circle"></i> Unregister
                        </button>
                    }
                    else if (activity.CurrentParticipants >= activity.MaxParticipants)
                    {
                        <button class="btn btn-secondary w-100" disabled>
                            <i class="bi bi-x-circle"></i> Registration Full
                        </button>
                    }
                    else if (isEnded)
                    {
                        <button class="btn btn-secondary w-100" disabled>
                            <i class="bi bi-clock-history"></i> Activity Ended
                        </button>
                    }
                    else if (activity.Status != "Approved")
                    {
                        <button class="btn btn-secondary w-100" disabled>
                            <i class="bi bi-hourglass-split"></i> @activity.Status
                        </button>
                    }
                </div>
            </div>

            <!-- Additional Info -->
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h6 class="fw-bold mb-3">Additional Information</h6>
                    
                    <div class="mb-3">
                        <small class="text-muted d-block mb-1">Created by</small>
                        <strong>@activity.CreatedByName</strong>
                    </div>
                    
                    <div class="mb-3">
                        <small class="text-muted d-block mb-1">Created on</small>
                        <strong>@activity.CreatedAt.ToString("MMMM dd, yyyy")</strong>
                    </div>
                    
                    @if (activity.ApprovedById.HasValue && !string.IsNullOrWhiteSpace(activity.ApprovedByName))
                    {
                        <div class="mb-3">
                            <small class="text-muted d-block mb-1">Approved by</small>
                            <strong>@activity.ApprovedByName</strong>
                        </div>
                        
                        @if (activity.ApprovedAt.HasValue)
                        {
                            <div>
                                <small class="text-muted d-block mb-1">Approved on</small>
                                <strong>@activity.ApprovedAt.Value.ToString("MMMM dd, yyyy")</strong>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-gradient-primary {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    }
</style>

<script>
    async function registerActivity(activityId) {
        try {
            const baseUrl = '@Model.ApiBaseUrl';
            const url = (baseUrl ? baseUrl : '') + `/api/activity/${activityId}/register`;
            const res = await fetch(url, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'include'
            });

            const data = await res.json().catch(() => ({}));
            if (!res.ok) {
                const msg = data?.message || 'Registration failed';
                alert(msg);
                return;
            }

            const btn = document.getElementById('registerBtn');
            if (btn) {
                btn.classList.remove('btn-success');
                btn.classList.add('btn-primary');
                btn.disabled = true;
                btn.innerHTML = '<i class="bi bi-check-circle-fill"></i> Activity registered';
            }
        } catch (e) {
            alert('Registration failed. Please try again.');
        }
    }

    async function unregisterActivity(activityId) {
        try {
            const baseUrl = '@Model.ApiBaseUrl';
            const url = (baseUrl ? baseUrl : '') + `/api/activity/${activityId}/unregister`;
            const res = await fetch(url, {
                method: 'POST',
                headers: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                credentials: 'include'
            });
            const data = await res.json().catch(() => ({}));
            if (!res.ok) {
                alert(data?.message || 'Unregister failed');
                return;
            }
            // Reload to refresh state
            location.reload();
        } catch (e) {
            alert('Unregister failed. Please try again.');
        }
    }
</script>

